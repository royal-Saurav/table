{"version":3,"sources":["App.js","reportWebVitals.js","ThemeSwitcher.js","index.js"],"names":["App","data","name","age","columns","Header","accessor","defaultPageSize","pageSizeOptions","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ThemeSwitcher","state","theme","dropdownOpen","toggleDropdown","setState","resetTheme","evt","preventDefault","chooseTheme","this","themeClass","toLowerCase","className","ButtonDropdown","isOpen","toggle","Button","id","color","DropdownToggle","caret","size","DropdownMenu","DropdownItem","onClick","e","divider","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qOA4CeA,E,4JAvCb,WA2BE,OACM,8BACI,cAAC,IAAD,CACIC,KA7BA,CAAC,CACXC,KAAM,QACNC,IAAK,IACH,CACDD,KAAM,QACNC,IAAK,IACH,CACFD,KAAM,QACNC,IAAK,IACH,CACFD,KAAM,QACNC,IAAK,IACH,CACFD,KAAM,QACNC,IAAK,IACH,CACFD,KAAM,QACNC,IAAK,KAaIC,QAXG,CAAC,CACfC,OAAQ,OACRC,SAAU,QACR,CACFD,OAAQ,MACRC,SAAU,QAOCC,gBAAmB,EACnBC,gBAAmB,CAAC,EAAE,EAAG,W,GAlCzBC,aCQHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,wCCsCCQ,E,4MAxCbC,MAAQ,CAAEC,MAAO,KAAMC,cAAc,G,EAErCC,eAAiB,WACf,EAAKC,SAAS,CAAEF,cAAe,EAAKF,MAAME,gB,EAG5CG,WAAa,SAAAC,GACXA,EAAIC,iBACJ,EAAKH,SAAS,CAAEH,MAAO,Q,EAGzBO,YAAc,SAACP,EAAOK,GACpBA,EAAIC,iBACJ,EAAKH,SAAS,CAAEH,W,4CAElB,WAAU,IAAD,SACyBQ,KAAKT,MAA7BC,EADD,EACCA,MAAOC,EADR,EACQA,aACTQ,EAAaT,EAAQA,EAAMU,cAAgB,YAEjD,OACE,sBAAKC,UAAU,6DAAf,UAEE,sBAAMA,UAAS,yCAAoCF,GAAnD,SAAkET,GAAS,YAE3E,eAACY,EAAA,EAAD,CAAgBC,OAAQZ,EAAca,OAAQN,KAAKN,eAAnD,UACE,eAACa,EAAA,EAAD,CAAQC,GAAG,QAAQC,MAAOR,EAA1B,UAAuCT,GAAS,SAAhD,YACA,cAACkB,EAAA,EAAD,CAAgBC,OAAK,EAACC,KAAK,KAAKH,MAAOR,IACvC,eAACY,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAcC,QAAS,SAAAC,GAAC,OAAI,EAAKjB,YAAY,UAAWiB,IAAxD,2BACA,cAACF,EAAA,EAAD,CAAcC,QAAS,SAAAC,GAAC,OAAI,EAAKjB,YAAY,SAAUiB,IAAvD,0BACA,cAACF,EAAA,EAAD,CAAcC,QAAS,SAAAC,GAAC,OAAI,EAAKjB,YAAY,UAAWiB,IAAxD,2BACA,cAACF,EAAA,EAAD,CAAcG,SAAO,IACrB,cAACH,EAAA,EAAD,CAAcC,QAASf,KAAKJ,WAA5B,wC,GAlCgBhB,aCM5BsC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAG1BJ,IAASC,OAAO,cAAC,EAAD,IAAmBE,SAASC,eAAe,SAM3DzC,M","file":"static/js/main.a3d6e589.chunk.js","sourcesContent":["import React, { Component } from 'react';  \nimport ReactTable from \"react-table-6\";  \nimport \"react-table-6/react-table.css\";  \n  \nclass App extends Component {  \n  render() {  \n     const data = [{  \n        name: 'Ayaan',  \n        age: 26  \n        },{  \n         name: 'Ahana',  \n         age: 22  \n         },{  \n         name: 'Peter',  \n         age: 40      \n         },{  \n         name: 'Virat',  \n         age: 30  \n         },{  \n         name: 'Rohit',  \n         age: 32  \n         },{  \n         name: 'Dhoni',  \n         age: 37  \n         }]  \n     const columns = [{  \n       Header: 'Name',  \n       accessor: 'name'  \n       },{  \n       Header: 'Age',  \n       accessor: 'age'  \n       }]  \n    return (  \n          <div>  \n              <ReactTable  \n                  data={data}  \n                  columns={columns}  \n                  defaultPageSize = {2}  \n                  pageSizeOptions = {[2,4, 6]}  \n              />  \n          </div>        \n    )  \n  }  \n}  \nexport default App;  ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React, { Component } from 'react';  \r\nimport { Button, ButtonDropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';  \r\n  \r\nclass ThemeSwitcher extends Component {  \r\n  \r\n  state = { theme: null, dropdownOpen: false }  \r\n    \r\n  toggleDropdown = () => {  \r\n    this.setState({ dropdownOpen: !this.state.dropdownOpen });  \r\n  }  \r\n    \r\n  resetTheme = evt => {  \r\n    evt.preventDefault();  \r\n    this.setState({ theme: null });  \r\n  }  \r\n    \r\n  chooseTheme = (theme, evt) => {  \r\n    evt.preventDefault();  \r\n    this.setState({ theme });  \r\n  }  \r\n  render() {  \r\n    const { theme, dropdownOpen } = this.state;  \r\n    const themeClass = theme ? theme.toLowerCase() : 'secondary';  \r\n      \r\n    return (  \r\n      <div className=\"d-flex flex-wrap justify-content-center align-items-center\">  \r\n        \r\n        <span className={`h1 mb-4 w-100 text-center text-${themeClass}`}>{theme || 'Default'}</span>  \r\n          \r\n        <ButtonDropdown isOpen={dropdownOpen} toggle={this.toggleDropdown}>  \r\n          <Button id=\"caret\" color={themeClass}>{theme || 'Custom'} Theme</Button>  \r\n          <DropdownToggle caret size=\"lg\" color={themeClass} />  \r\n          <DropdownMenu>  \r\n            <DropdownItem onClick={e => this.chooseTheme('Primary', e)}>Primary Theme</DropdownItem>  \r\n            <DropdownItem onClick={e => this.chooseTheme('Danger', e)}>Danger Theme</DropdownItem>  \r\n            <DropdownItem onClick={e => this.chooseTheme('Success', e)}>Success Theme</DropdownItem>  \r\n            <DropdownItem divider />  \r\n            <DropdownItem onClick={this.resetTheme}>Default Theme</DropdownItem>  \r\n          </DropdownMenu>  \r\n        </ButtonDropdown>  \r\n          \r\n      </div>  \r\n    );    \r\n  }  \r\n}  \r\nexport default ThemeSwitcher;  ","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport ThemeSwitcher from './ThemeSwitcher'; \n// import List from './List';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nReactDOM.render(<ThemeSwitcher />, document.getElementById('root')); \n// ReactDOM.render(<List />, document.getElementById('app'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}